[gd_resource type="VisualShader" load_steps=11 format=2]

[sub_resource type="VisualShaderNodeScalarOp" id=6]
operator = 4

[sub_resource type="VisualShaderNodeScalarUniform" id=7]
uniform_name = "FPS"

[sub_resource type="VisualShaderNodeScalarOp" id=8]
operator = 3

[sub_resource type="VisualShaderNodeScalarFunc" id=9]
function = 14

[sub_resource type="VisualShaderNodeVectorOp" id=10]
operator = 3

[sub_resource type="VisualShaderNodeTexture" id=1]
texture_type = 1

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=3]
input_name = "time"

[sub_resource type="VisualShaderNodeScalarUniform" id=4]
uniform_name = "Frames"

[sub_resource type="VisualShaderNodeScalarUniform" id=5]
uniform_name = "Animations"

[resource]
code = "shader_type spatial;
render_mode specular_schlick_ggx;

uniform float Frames;
uniform sampler2D tex_frg_2 : hint_albedo;



void vertex() {
// Output:0

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// ScalarUniform:8
	float n_out8p0 = Frames;

// VectorOp:14
	vec3 n_out14p0 = n_out3p0 / vec3(n_out8p0);

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out14p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Output:0
	ALBEDO = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -293.563, -146.86 )
nodes/fragment/0/position = Vector2( 1080, 160 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 660, 40 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -120, 60 )
nodes/fragment/7/node = SubResource( 3 )
nodes/fragment/7/position = Vector2( -500, 220 )
nodes/fragment/8/node = SubResource( 4 )
nodes/fragment/8/position = Vector2( -500, 400 )
nodes/fragment/9/node = SubResource( 5 )
nodes/fragment/9/position = Vector2( -500, 500 )
nodes/fragment/10/node = SubResource( 6 )
nodes/fragment/10/position = Vector2( 100, 340 )
nodes/fragment/11/node = SubResource( 7 )
nodes/fragment/11/position = Vector2( -500, 320 )
nodes/fragment/12/node = SubResource( 8 )
nodes/fragment/12/position = Vector2( -320, 240 )
nodes/fragment/13/node = SubResource( 9 )
nodes/fragment/13/position = Vector2( -140, 260 )
nodes/fragment/14/node = SubResource( 10 )
nodes/fragment/14/position = Vector2( 160, 100 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 0, 8, 0, 10, 1, 7, 0, 12, 0, 11, 0, 12, 1, 12, 0, 13, 0, 13, 0, 10, 0, 8, 0, 14, 1, 3, 0, 14, 0, 14, 0, 2, 0 )
